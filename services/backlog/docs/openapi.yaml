openapi: 3.0.0
info:
  title: Backlog API
  version: 1.0.0
paths:
  /stories:
    post:
      summary: Create a new story
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                projectId:
                  type: string
                  format: uuid
                title:
                  type: string
                description:
                  type: string
                labels:
                  type: array
                  items:
                    type: string
      responses:
        '201':
          description: Story created
          content:
            application/json:
              schema:
                type: object
                properties:
                  storyId:
                    type: string
                    format: uuid
  /stories/{id}:
    get:
      summary: Get a story
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Story details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  projectId:
                    type: string
                    format: uuid
                  title:
                    type: string
                  description:
                    type: string
                  status:
                    type: string
                    enum: [Ready, InProgress, InReview, Done]
                  labels:
                    type: array
                    items:
                      type: string
    patch:
      summary: Update a story
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                labels:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Story updated
    delete:
      summary: Delete a story
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Story deleted
  /stories/{id}/tasks:
    get:
      summary: Get tasks for a story
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Tasks for the story
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    storyId:
                      type: string
                      format: uuid
                    title:
                      type: string
                    description:
                      type: string
                    acceptanceCriteriaRefs:
                      type: array
                      items:
                        type: string
    post:
      summary: Create a new task for a story
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                acceptanceCriteriaRefs:
                  type: array
                  items:
                    type: string
                  description: References to acceptance criteria IDs
                  default: []
      responses:
        '201':
          description: Task created
          content:
            application/json:
              schema:
                type: object
                properties:
                  taskId:
                    type: string
                    format: uuid
  /stories/{id}/status:
    patch:
      summary: Update the status of a story
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [Ready, InProgress, InReview, Done]
      responses:
        '200':
          description: Story status updated
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
